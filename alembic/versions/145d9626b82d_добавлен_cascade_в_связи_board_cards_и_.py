"""Добавлен CASCADE в связи board_cards и cards

Revision ID: 145d9626b82d
Revises: fb8e1da9917e
Create Date: 2025-03-15 11:20:35.819141

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '145d9626b82d'
down_revision: Union[str, None] = 'fb8e1da9917e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brackets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('structure', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('results', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('bracket')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_constraint('board_cards_board_id_fkey', 'board_cards', type_='foreignkey')
    op.drop_constraint('board_cards_card_id_fkey', 'board_cards', type_='foreignkey')
    op.create_foreign_key(None, 'board_cards', 'cards', ['card_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'board_cards', 'boards', ['board_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'board_cards', type_='foreignkey')
    op.drop_constraint(None, 'board_cards', type_='foreignkey')
    op.create_foreign_key('board_cards_card_id_fkey', 'board_cards', 'cards', ['card_id'], ['id'])
    op.create_foreign_key('board_cards_board_id_fkey', 'board_cards', 'boards', ['board_id'], ['id'])
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('refresh_token', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('bracket',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('structure', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('results', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], name='bracket_session_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='bracket_pkey')
    )
    op.drop_table('brackets')
    # ### end Alembic commands ###
